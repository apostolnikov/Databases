A transaction symbolizes a unit of work performed within a database management system (or similar system) against a database, and 
treated in a coherent and reliable way independent of other transactions. A transaction generally represents any change in database. 
Transactions in a database environment have two main purposes.
To provide reliable units of work that allow correct recovery from failures and keep a database consistent even in cases of system failure, 
when execution stops (completely or partially) and many operations upon a database remain uncompleted, with unclear status.
To provide isolation between programs accessing a database concurrently. If this isolation is not provided, the program's outcome are possibly erroneous.

Transaction log:
In the field of databases in computer science, a transaction log (also transaction journal, database log, binary log or audit trail) is a 
history of actions executed by a database management system to guarantee ACID properties over crashes or hardware failures. 
Physically, a log is a file listing changes to the database, stored in a stable storage format.

ACID:
In computer science, ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties that guarantee that database transactions are 
processed reliably. In the context of databases, a single logical operation on the data is called a transaction. For example, a transfer of 
funds from one bank account to another, even involving multiple changes such as debiting one account and crediting another, is a single transaction.
Jim Gray defined these properties of a reliable transaction system in the late 1970s and developed technologies to achieve them automatically.
In 1983, Andreas Reuter and Theo Harder coined the acronym ACID to describe them.